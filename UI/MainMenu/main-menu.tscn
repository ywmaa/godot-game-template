[gd_scene load_steps=5 format=3 uid="uid://cwi2bhc6u3dt2"]

[ext_resource type="Script" path="res://UI/MainMenu/main-menu.gd" id="1_qxyrm"]
[ext_resource type="PackedScene" uid="uid://c3m45eysuprou" path="res://UI/MainMenu/Settings/settings.tscn" id="2_1x4i5"]

[sub_resource type="Shader" id="Shader_4q3he"]
code = "// Star Nest by Pablo Roman Andrioli
// Ported to Godot by Lyagva
// License: MIT
shader_type canvas_item;

uniform int iterations = 17;
uniform float formuparam = 0.53;

uniform int volsteps = 25;
uniform float stepsize = 0.1;

uniform float zoom   = 0.800;
uniform float tile   = 0.850;
uniform float speed  = 0.001;

uniform float brightness = 0.0015;
uniform float darkmatter = 0.300;
uniform float distfading = 0.730;
uniform float saturation = 0.850;

uniform vec2 mouse;
uniform sampler2D coloramp;
uniform float colorampMix = .5;
uniform bool isColoramp;

void fragment()
{
	vec2 fragCoord = FRAGCOORD.xy;
	vec2 iResolution = 1.0 / SCREEN_PIXEL_SIZE;
	float iTime = TIME;

	//get coords and direction
	vec2 uv=fragCoord.xy/iResolution.xy-.5;
	uv.y*=iResolution.y/iResolution.x;
	vec3 dir=vec3(uv*zoom,1.);
	float time=iTime*speed+.25;

	//mouse rotation
	float a1 = .5 + mouse.x / iResolution.x * 2.;
	float a2 = .8 + mouse.y / iResolution.y * 2.;
	mat2 rot1 = mat2(vec2(cos(a1), sin(a1)), vec2(-sin(a1), cos(a1)));
	mat2 rot2 = mat2(vec2(cos(a2), sin(a2)), vec2(-sin(a2), cos(a2)));
	dir.xz *= rot1;
	dir.xy *= rot2;
	vec3 from = vec3(1.,.5,0.5);
	from += vec3(time * 2., time, -2.);
	from.xz *= rot1;
	from.xy *= rot2;

	//volumetric rendering
	float s = 0.1, fade = 1.;
	vec3 v=vec3(0.);
	for (int r=0; r<volsteps; r++) {
		vec3 p=from+s*dir*.5;
		p = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold
		float pa,a=pa=0.;
		for (int i=0; i<iterations; i++) {
			p=abs(p)/dot(p,p)-formuparam; // the magic formula
			a+=abs(length(p)-pa); // absolute sum of average change
			pa=length(p);
		}
		float dm=max(0.,darkmatter-a*a*.001); //dark matter
		a*=a*a; // add contrast
		if (r>6) fade*=1.-dm; // dark matter, don't render near
		//v+=vec3(dm,dm*.5,0.);
		v+=fade;
		v+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance
		fade*=distfading; // distance fading
		s+=stepsize;
	}
	v=mix(vec3(length(v)),v,saturation); //color adjust

	COLOR = vec4(v*.01,1.);

	if (isColoramp) {
		COLOR += texture(coloramp, vec2(v.r * .01, 0.)) * colorampMix;
	}

}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_w15d7"]
shader = SubResource("Shader_4q3he")
shader_parameter/iterations = 17
shader_parameter/formuparam = 0.53
shader_parameter/volsteps = 25
shader_parameter/stepsize = 0.1
shader_parameter/zoom = 0.8
shader_parameter/tile = 0.85
shader_parameter/speed = 0.001
shader_parameter/brightness = 0.0015
shader_parameter/darkmatter = 0.3
shader_parameter/distfading = 0.73
shader_parameter/saturation = 0.85
shader_parameter/mouse = null
shader_parameter/colorampMix = 0.5
shader_parameter/isColoramp = null

[node name="MainMenu" type="Control" node_paths=PackedStringArray("play_button", "options_button", "credits_button", "exit_button")]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_qxyrm")
play_button = NodePath("VBoxContainer/Play")
options_button = NodePath("VBoxContainer/Settings")
credits_button = NodePath("VBoxContainer/Credits")
exit_button = NodePath("VBoxContainer/Exit")
OptionsMenu = ExtResource("2_1x4i5")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_w15d7")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -20.0
offset_top = -20.0
offset_right = 20.0
offset_bottom = 20.0
grow_horizontal = 2
grow_vertical = 2

[node name="Play" type="Button" parent="VBoxContainer"]
custom_minimum_size = Vector2(250, 50)
layout_mode = 2
text = "Play"

[node name="Settings" type="Button" parent="VBoxContainer"]
custom_minimum_size = Vector2(250, 50)
layout_mode = 2
text = "Settings"

[node name="Credits" type="Button" parent="VBoxContainer"]
custom_minimum_size = Vector2(250, 50)
layout_mode = 2
text = "Credits"

[node name="Exit" type="Button" parent="VBoxContainer"]
custom_minimum_size = Vector2(250, 50)
layout_mode = 2
text = "Exit"
